apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.0'

    defaultConfig {
        applicationId 'com.skogsrud.halvard.androidtraviscispike'
        minSdkVersion 10
        targetSdkVersion 23
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        versionCode 1
        versionName '1.0'
    }

    signingConfigs {
        release {
            // Don't use the debug keystore for signing the release APK. This config is just to test the process.
            storeFile file("${System.getenv('HOME')}/.android/debug.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'LICENSE'
    }

    lintOptions {
        abortOnError false
    }
}

def androidSupportVersion = '23.0.0'
def playServicesVersion = '7.8.0'
def okhttpVersion = '2.4.0'
def ottoVersion = '1.3.8'
def picassoVersion = '2.4.0'
def espressoVersion = '2.2'
def accessibilityTestFrameworkVersion = '2.0'
def junitVersion = '4.12'
def hamcrestVersion = '1.3'
def robolectricVersion = '3.0'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:${androidSupportVersion}"
    compile "com.android.support:cardview-v7:${androidSupportVersion}"
    compile "com.android.support:design:${androidSupportVersion}"
    compile "com.android.support:recyclerview-v7:${androidSupportVersion}"
    compile "com.android.support:support-annotations:${androidSupportVersion}"
//    compile "com.google.android.gms:play-services:${playServicesVersion}"
//    compile "com.google.android.gms:play-services-location:${playServicesVersion}"
//    compile "com.google.android.gms:play-services-maps:${playServicesVersion}"
//    compile "com.squareup.okhttp:okhttp:${okhttpVersion}"
//    compile "com.squareup:otto:${ottoVersion}"
//    compile "com.squareup.picasso:picasso:${picassoVersion}"

    androidTestCompile "com.android.support:support-annotations:${androidSupportVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-core:${espressoVersion}"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:${espressoVersion}") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'support-v4'
    }

    testCompile "com.google.android.apps.common.testing.accessibility.framework:accessibility-test-framework:${accessibilityTestFrameworkVersion}"
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.hamcrest:hamcrest-library:${hamcrestVersion}"
    testCompile "org.robolectric:robolectric:${robolectricVersion}"
}

// Disable animations to speed up and make UI tests more reliable
task grantAnimationPermission(type: Exec, dependsOn: 'installDebug') {
    def adb = "$System.env.ANDROID_HOME/platform-tools/adb"
    commandLine "$adb shell pm grant com.skogsrud.halvard.androidtraviscispike android.permission.DISABLE_KEYGUARD".split(' ')
    commandLine "$adb shell pm grant com.skogsrud.halvard.androidtraviscispike android.permission.SET_ANIMATION_SCALE".split(' ')
}
tasks.whenTaskAdded { task ->
    if (task.name.startsWith('connected')) {
//        task.dependsOn grantAnimationPermission
    }
}

